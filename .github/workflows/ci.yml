name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    name: ${{matrix.platform.name}} ${{matrix.type.name}} ${{matrix.config.name}}
    runs-on: ${{matrix.platform.os}}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows,     os: windows-latest }
        - { name: Linux GCC,   os: ubuntu-latest }
        - { name: Linux Clang, os: ubuntu-latest, flags: -DCMAKE_CXX_COMPILER=clang++ }
        - { name: macOS,       os: macos-latest }
        type:
        - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }
        config:
        - { name: Debug }
        - { name: Release }

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure
      run: cmake -B build -DCMAKE_INSTALL_PREFIX=install ${{matrix.platform.flags}} ${{matrix.type.flags}} -DCMAKE_BUILD_TYPE=${{matrix.config.name}}

    - name: Build
      run: cmake --build build --config ${{matrix.config.name}} --target install

    - name: Test
      run: ctest --test-dir build --build-config ${{matrix.config.name}} --output-on-failure

    - name: Configure Installation Test
      run: cmake -S examples -B examples/build -Dargon_ROOT=install ${{matrix.platform.flags}} ${{matrix.type.flags}} -DCMAKE_BUILD_TYPE=${{matrix.config.name}}

    - name: Build Installation Test
      run: cmake --build examples/build --config ${{matrix.config.name}}

  format:
    name: clang-format
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure
      run: cmake -B build -DCMAKE_CXX_COMPILER=clang++

    - name: Format
      run: |
        cmake --build build --target format
        git diff --exit-code

  tidy:
    name: clang-tidy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure
      run: cmake -B build -DCMAKE_CXX_COMPILER=clang++

    - name: Tidy
      run: cmake --build build --target tidy

  docs:
    name: Docs
    runs-on: ubuntu-latest

    steps:
    - name: Install Doxygen
      run: sudo apt install doxygen graphviz

    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure
      run: cmake -B build -DBUILD_TESTING=OFF

    - name: Build Doxygen Site
      run: cmake --build build --target docs
